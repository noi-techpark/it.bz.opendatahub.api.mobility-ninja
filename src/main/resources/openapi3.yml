openapi: 3.0.1
info:
  title: Open Data Hub Mobility API
  description: >
    Documentation: <a
    href="https://opendatahub.readthedocs.io/en/latest/datasets.html#datasets-in-the-mobility-domain">Mobility
    Datasets</a> |
    <a
    href="https://opendatahub.readthedocs.io/en/latest/howto/mobility/getstarted.html">Getting
    started with the API Mobility V2</a> | <a
    href="https://opendatahub.readthedocs.io/en/latest/howto.html">General
    Howtos</a> | <a
    href="https://github.com/noi-techpark/bdp-core">Source Code</a>

  termsOfService: https://opendatahub.readthedocs.io/en/latest/licenses.html#apis-terms-of-service
  contact:
    name: Open Data Hub
    url: https://opendatahub.bz.it
    email: help@opendatahub.bz.it
  license:
    name: API License
    url: https://opendatahub.readthedocs.io/en/latest/licenses.html
  version: V1 and V2
servers:
  - url: __ODH_SERVER_URL__
tags:
  - name: Mobility V2
    description: New Generic Data Controller to retrieve all kinds of data
  - name: Mobility V1 - Bikesharing
    description: <u>Deprecated</u> Controller for Bikesharing Data
  - name: Mobility V1 - Bikesharing / Bikes
    description: <u>Deprecated</u> Controller for Bikesharing / Bikes Data (child entities)
  - name: Mobility V1 - Bluetooth
    description: <u>Deprecated</u> Controller for Bluetooth Data
  - name: Mobility V1 - Carpooling
    description: <u>Deprecated</u> Controller for Carpooling Data
  - name: Mobility V1 - Carpooling / User
    description: <u>Deprecated</u> Controller for Carpooling / User Data (child entities)
  - name: Mobility V1 - Carsharing
    description: <u>Deprecated</u> Controller for Carsharing Data
  - name: Mobility V1 - Carsharing / Cars
    description: <u>Deprecated</u> Controller for Carsharing / Cars Data (child entities)
  - name: Mobility V1 - Emobility
    description: <u>Deprecated</u> Controller for Emobility Data
  - name: Mobility V1 - Emobility / Plugs
    description: <u>Deprecated</u> Controller for Emobility / Plug Data (child entities)
  - name: Mobility V1 - Environment
    description: <u>Deprecated</u> Controller for Environment Data
  - name: Mobility V1 - Meteorology
    description: <u>Deprecated</u> Controller for Meteorology Data
  - name: Mobility V1 - Origin/Destination
    description: <u>Deprecated</u> Controller for Origin/Destination Data
  - name: Mobility V1 - Parking
    description: <u>Deprecated</u> Controller for Parking Data
  - name: Mobility V1 - Roadweather
    description: <u>Deprecated</u> Controller for Roadweather Data
  - name: Mobility V1 - Sensors
    description: <u>Deprecated</u> Controller for Sensors Data
  - name: Mobility V1 - Street
    description: <u>Deprecated</u> Controller for Street Data
  - name: Mobility V1 - VMS
    description: <u>Deprecated</u> Controller for VMS Data
paths:

  # V2 ----------------------------------------------------------------------------------------
  /v2/:
    get:
      tags:
        - Mobility V2
      summary: View a list of entry points to the Open Data Hub Mobility domain
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v2/{representation}:
    get:
      tags:
        - Mobility V2
      summary: View a list of all station types (categories)
      parameters:
        - $ref: "#/components/parameters/representation"
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v2/{representation}/{stationTypes}:
    get:
      tags:
        - Mobility V2
      summary: View station details of stations with a given station type
      description:
        You can put multiple stationtypes as comma-seperated lists. The response
        contains stations (prefix <code>s</code>) and their parent-stations
        (prefix <code>p</code>). Each JSON attribute is prefixed with the first
        letter of that object.
      parameters:
        - $ref: "#/components/parameters/representation"
        - $ref: "#/components/parameters/stationTypes"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/select"
        - $ref: "#/components/parameters/where"
        - $ref: "#/components/parameters/shownull"
        - $ref: "#/components/parameters/distinct"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v2/{representation}/{stationTypes}/{dataTypes}:
    get:
      tags:
        - Mobility V2
      summary:
        View station details of stations with a given station type including
        associated data types
      description:
        You can put multiple stationtypes or datatypes as comma-seperated lists.
        The response contains stations (prefix <code>s</code>), their
        parent-stations (prefix <code>p</code>) and types (prefix
        <code>t</code>). Each JSON attribute is prefixed with the first letter
        of that object.
      parameters:
        - $ref: "#/components/parameters/representation"
        - $ref: "#/components/parameters/stationTypes"
        - $ref: "#/components/parameters/dataTypes"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/select"
        - $ref: "#/components/parameters/where"
        - $ref: "#/components/parameters/shownull"
        - $ref: "#/components/parameters/distinct"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v2/{representation}/{stationTypes}/{dataTypes}/latest:
    get:
      tags:
        - Mobility V2
      summary:
        View details of all given station types including data types and most recent
        measurements
      description:
        You can put multiple stationtypes or datatypes as comma-seperated lists.
        The response contains stations (prefix <code>s</code>), their
        parent-stations (prefix <code>p</code>), types (prefix <code>t</code>)
        and the latest measurements (prefix <code>m</code>). Each JSON attribute
        is prefixed with the first letter of that object.
      parameters:
        - $ref: "#/components/parameters/representation"
        - $ref: "#/components/parameters/stationTypes"
        - $ref: "#/components/parameters/dataTypes"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/select"
        - $ref: "#/components/parameters/where"
        - $ref: "#/components/parameters/shownull"
        - $ref: "#/components/parameters/distinct"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v2/{representation}/{stationTypes}/{dataTypes}/{from}/{to}:
    get:
      tags:
        - Mobility V2
      summary:
        View details of all given station types including data types and historical
        measurements
      description:
        You can put multiple stationtypes or datatypes as comma-seperated lists.
        The response contains stations (prefix <code>s</code>), their
        parent-stations (prefix <code>p</code>), types (prefix <code>t</code>)
        and historical measurements (prefix <code>m</code>). Each JSON attribute
        is prefixed with the first letter of that object.
      parameters:
        - $ref: "#/components/parameters/representation"
        - $ref: "#/components/parameters/stationTypes"
        - $ref: "#/components/parameters/dataTypes"
        - $ref: "#/components/parameters/from"
        - $ref: "#/components/parameters/to"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/select"
        - $ref: "#/components/parameters/where"
        - $ref: "#/components/parameters/shownull"
        - $ref: "#/components/parameters/distinct"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}

  # V1 PARKING ----------------------------------------------------------------------------------
  /v1/parking/rest/get-stations:
    get:
      tags:
      - Mobility V1 - Parking
      summary: Retrieve all stations in the dataset.
      description: This method returns all the ID of the stations listed in the dataset.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/parking/rest/get-station-details:
    get:
      tags:
      - Mobility V1 - Parking
      summary: Retrieve all information about all stations.
      description: This method returns the list of all stations in the dataset, including
        all available information about them.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/parking/rest/get-data-types:
    get:
      tags:
      - Mobility V1 - Parking
      summary: Return the available data types for that station.
      parameters:
      - $ref: "#/components/parameters/v1station"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/parking/rest/get-date-of-last-record:
    get:
      tags:
      - Mobility V1 - Parking
      summary: Return the timestamp of the latest recorded action for that station.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: date-time
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/parking/rest/get-newest-record:
    get:
      tags:
      - Mobility V1 - Parking
      summary: Return the timestamp and value of the latest recorded data.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/parking/rest/get-records:
    get:
      tags:
      - Mobility V1 - Parking
      summary: Returns all the data in the last given seconds.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/parking/rest/get-records-in-timeframe:
    get:
      tags:
      - Mobility V1 - Parking
      summary: Return for a given station the data acquired in a given interval.
      description: Show all the data recorded in the given interval. Remember to convert
        any date into milliseconds from epoch.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1fromrequired"
      - $ref: "#/components/parameters/v1torequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/parking/rest/access-token:
    get:
      tags:
      - Mobility V1 - Parking
      summary: Request a new access token
      description: This method would give you a new token to access protected data.
      parameters:
      - $ref: "#/components/parameters/v1authorizationrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/parking/rest/refresh-token:
    get:
      tags:
      - Mobility V1 - Parking
      summary: Request a new authorisation token to access protected data.
      description: If you need to access protected, closed data and you have been
        given a username and password, invoke this method to receive a new token.
      parameters:
      - $ref: "#/components/parameters/v1userrequired"
      - $ref: "#/components/parameters/v1passwordrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}

  # V1 BIKESHARING ------------------------------------------------------------------------------
  /v1/bikesharing/rest/get-stations:
    get:
      tags:
      - Mobility V1 - Bikesharing
      summary: Retrieve all stations in the dataset.
      description: This method returns all the ID of the stations listed in the dataset.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bikesharing/rest/get-station-details:
    get:
      tags:
      - Mobility V1 - Bikesharing
      summary: Retrieve all information about all stations.
      description: This method returns the list of all stations in the dataset, including
        all available information about them.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bikesharing/rest/get-data-types:
    get:
      tags:
      - Mobility V1 - Bikesharing
      summary: Return the available data types for that station.
      parameters:
      - $ref: "#/components/parameters/v1station"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bikesharing/rest/get-date-of-last-record:
    get:
      tags:
      - Mobility V1 - Bikesharing
      summary: Return the timestamp of the latest recorded action for that station.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: date-time
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bikesharing/rest/get-newest-record:
    get:
      tags:
      - Mobility V1 - Bikesharing
      summary: Return the timestamp and value of the latest recorded data.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bikesharing/rest/get-records:
    get:
      tags:
      - Mobility V1 - Bikesharing
      summary: Returns all the data in the last given seconds.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bikesharing/rest/get-records-in-timeframe:
    get:
      tags:
      - Mobility V1 - Bikesharing
      summary: Return for a given station the data acquired in a given interval.
      description: Show all the data recorded in the given interval. Remember to convert
        any date into milliseconds from epoch.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1fromrequired"
      - $ref: "#/components/parameters/v1torequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bikesharing/rest/access-token:
    get:
      tags:
      - Mobility V1 - Bikesharing
      summary: Request a new access token
      description: This method would give you a new token to access protected data.
      parameters:
      - $ref: "#/components/parameters/v1authorizationrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bikesharing/rest/refresh-token:
    get:
      tags:
      - Mobility V1 - Bikesharing
      summary: Request a new authorisation token to access protected data.
      description: If you need to access protected, closed data and you have been
        given a username and password, invoke this method to receive a new token.
      parameters:
      - $ref: "#/components/parameters/v1userrequired"
      - $ref: "#/components/parameters/v1passwordrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}

  # V1 BIKESHARING / BIKES ----------------------------------------------------------------------
  /v1/bikesharing/rest/bikes/get-stations:
    get:
      tags:
      - Mobility V1 - Bikesharing / Bikes
      summary: Retrieve all stations in the dataset.
      description: This method returns all the ID of the stations listed in the dataset.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bikesharing/rest/bikes/get-station-details:
    get:
      tags:
      - Mobility V1 - Bikesharing / Bikes
      summary: Retrieve all information about all stations.
      description: This method returns the list of all stations in the dataset, including
        all available information about them.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bikesharing/rest/bikes/get-data-types:
    get:
      tags:
      - Mobility V1 - Bikesharing / Bikes
      summary: Return the available data types for that station.
      parameters:
      - $ref: "#/components/parameters/v1station"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bikesharing/rest/bikes/get-date-of-last-record:
    get:
      tags:
      - Mobility V1 - Bikesharing / Bikes
      summary: Return the timestamp of the latest recorded action for that station.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: date-time
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bikesharing/rest/bikes/get-newest-record:
    get:
      tags:
      - Mobility V1 - Bikesharing / Bikes
      summary: Return the timestamp and value of the latest recorded data.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bikesharing/rest/bikes/get-records:
    get:
      tags:
      - Mobility V1 - Bikesharing / Bikes
      summary: Returns all the data in the last given seconds.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bikesharing/rest/bikes/get-records-in-timeframe:
    get:
      tags:
      - Mobility V1 - Bikesharing / Bikes
      summary: Return for a given station the data acquired in a given interval.
      description: Show all the data recorded in the given interval. Remember to convert
        any date into milliseconds from epoch.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1fromrequired"
      - $ref: "#/components/parameters/v1torequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bikesharing/rest/bikes/access-token:
    get:
      tags:
      - Mobility V1 - Bikesharing / Bikes
      summary: Request a new access token
      description: This method would give you a new token to access protected data.
      parameters:
      - $ref: "#/components/parameters/v1authorizationrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bikesharing/rest/bikes/refresh-token:
    get:
      tags:
      - Mobility V1 - Bikesharing / Bikes
      summary: Request a new authorisation token to access protected data.
      description: If you need to access protected, closed data and you have been
        given a username and password, invoke this method to receive a new token.
      parameters:
      - $ref: "#/components/parameters/v1userrequired"
      - $ref: "#/components/parameters/v1passwordrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}

  # V1 BLUETOOTH -------------------------------------------------------------------------------
  /v1/bluetooth/rest/get-stations:
    get:
      tags:
      - Mobility V1 - Bluetooth
      summary: Retrieve all stations in the dataset.
      description: This method returns all the ID of the stations listed in the dataset.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bluetooth/rest/get-station-details:
    get:
      tags:
      - Mobility V1 - Bluetooth
      summary: Retrieve all information about all stations.
      description: This method returns the list of all stations in the dataset, including
        all available information about them.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bluetooth/rest/get-data-types:
    get:
      tags:
      - Mobility V1 - Bluetooth
      summary: Return the available data types for that station.
      parameters:
      - $ref: "#/components/parameters/v1station"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bluetooth/rest/get-date-of-last-record:
    get:
      tags:
      - Mobility V1 - Bluetooth
      summary: Return the timestamp of the latest recorded action for that station.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: date-time
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bluetooth/rest/get-newest-record:
    get:
      tags:
      - Mobility V1 - Bluetooth
      summary: Return the timestamp and value of the latest recorded data.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bluetooth/rest/get-records:
    get:
      tags:
      - Mobility V1 - Bluetooth
      summary: Returns all the data in the last given seconds.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bluetooth/rest/get-records-in-timeframe:
    get:
      tags:
      - Mobility V1 - Bluetooth
      summary: Return for a given station the data acquired in a given interval.
      description: Show all the data recorded in the given interval. Remember to convert
        any date into milliseconds from epoch.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1fromrequired"
      - $ref: "#/components/parameters/v1torequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bluetooth/rest/access-token:
    get:
      tags:
      - Mobility V1 - Bluetooth
      summary: Request a new access token
      description: This method would give you a new token to access protected data.
      parameters:
      - $ref: "#/components/parameters/v1authorizationrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/bluetooth/rest/refresh-token:
    get:
      tags:
      - Mobility V1 - Bluetooth
      summary: Request a new authorisation token to access protected data.
      description: If you need to access protected, closed data and you have been
        given a username and password, invoke this method to receive a new token.
      parameters:
      - $ref: "#/components/parameters/v1userrequired"
      - $ref: "#/components/parameters/v1passwordrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}

  # V1 CARPOOLING ------------------------------------------------------------------------------
  /v1/carpooling/rest/get-stations:
    get:
      tags:
      - Mobility V1 - Carpooling
      summary: Retrieve all stations in the dataset.
      description: This method returns all the ID of the stations listed in the dataset.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carpooling/rest/get-station-details:
    get:
      tags:
      - Mobility V1 - Carpooling
      summary: Retrieve all information about all stations.
      description: This method returns the list of all stations in the dataset, including
        all available information about them.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carpooling/rest/get-data-types:
    get:
      tags:
      - Mobility V1 - Carpooling
      summary: Return the available data types for that station.
      parameters:
      - $ref: "#/components/parameters/v1station"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carpooling/rest/get-date-of-last-record:
    get:
      tags:
      - Mobility V1 - Carpooling
      summary: Return the timestamp of the latest recorded action for that station.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: date-time
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carpooling/rest/get-newest-record:
    get:
      tags:
      - Mobility V1 - Carpooling
      summary: Return the timestamp and value of the latest recorded data.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carpooling/rest/get-records:
    get:
      tags:
      - Mobility V1 - Carpooling
      summary: Returns all the data in the last given seconds.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carpooling/rest/get-records-in-timeframe:
    get:
      tags:
      - Mobility V1 - Carpooling
      summary: Return for a given station the data acquired in a given interval.
      description: Show all the data recorded in the given interval. Remember to convert
        any date into milliseconds from epoch.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1fromrequired"
      - $ref: "#/components/parameters/v1torequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carpooling/rest/access-token:
    get:
      tags:
      - Mobility V1 - Carpooling
      summary: Request a new access token
      description: This method would give you a new token to access protected data.
      parameters:
      - $ref: "#/components/parameters/v1authorizationrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carpooling/rest/refresh-token:
    get:
      tags:
      - Mobility V1 - Carpooling
      summary: Request a new authorisation token to access protected data.
      description: If you need to access protected, closed data and you have been
        given a username and password, invoke this method to receive a new token.
      parameters:
      - $ref: "#/components/parameters/v1userrequired"
      - $ref: "#/components/parameters/v1passwordrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}

  # V1 CARPOOLING / USER ------------------------------------------------------------------------
  /v1/carpooling/rest/user/get-stations:
    get:
      tags:
      - Mobility V1 - Carpooling / User
      summary: Retrieve all stations in the dataset.
      description: This method returns all the ID of the stations listed in the dataset.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carpooling/rest/user/get-station-details:
    get:
      tags:
      - Mobility V1 - Carpooling / User
      summary: Retrieve all information about all stations.
      description: This method returns the list of all stations in the dataset, including
        all available information about them.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carpooling/rest/user/get-data-types:
    get:
      tags:
      - Mobility V1 - Carpooling / User
      summary: Return the available data types for that station.
      parameters:
      - $ref: "#/components/parameters/v1station"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carpooling/rest/user/get-date-of-last-record:
    get:
      tags:
      - Mobility V1 - Carpooling / User
      summary: Return the timestamp of the latest recorded action for that station.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: date-time
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carpooling/rest/user/get-newest-record:
    get:
      tags:
      - Mobility V1 - Carpooling / User
      summary: Return the timestamp and value of the latest recorded data.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carpooling/rest/user/get-records:
    get:
      tags:
      - Mobility V1 - Carpooling / User
      summary: Returns all the data in the last given seconds.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carpooling/rest/user/get-records-in-timeframe:
    get:
      tags:
      - Mobility V1 - Carpooling / User
      summary: Return for a given station the data acquired in a given interval.
      description: Show all the data recorded in the given interval. Remember to convert
        any date into milliseconds from epoch.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1fromrequired"
      - $ref: "#/components/parameters/v1torequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carpooling/rest/user/access-token:
    get:
      tags:
      - Mobility V1 - Carpooling / User
      summary: Request a new access token
      description: This method would give you a new token to access protected data.
      parameters:
      - $ref: "#/components/parameters/v1authorizationrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carpooling/rest/user/refresh-token:
    get:
      tags:
      - Mobility V1 - Carpooling / User
      summary: Request a new authorisation token to access protected data.
      description: If you need to access protected, closed data and you have been
        given a username and password, invoke this method to receive a new token.
      parameters:
      - $ref: "#/components/parameters/v1userrequired"
      - $ref: "#/components/parameters/v1passwordrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}

  # V1 CARSHARING ------------------------------------------------------------------------------
  /v1/carsharing/rest/get-stations:
    get:
      tags:
      - Mobility V1 - Carsharing
      summary: Retrieve all stations in the dataset.
      description: This method returns all the ID of the stations listed in the dataset.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carsharing/rest/get-station-details:
    get:
      tags:
      - Mobility V1 - Carsharing
      summary: Retrieve all information about all stations.
      description: This method returns the list of all stations in the dataset, including
        all available information about them.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carsharing/rest/get-data-types:
    get:
      tags:
      - Mobility V1 - Carsharing
      summary: Return the available data types for that station.
      parameters:
      - $ref: "#/components/parameters/v1station"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carsharing/rest/get-date-of-last-record:
    get:
      tags:
      - Mobility V1 - Carsharing
      summary: Return the timestamp of the latest recorded action for that station.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: date-time
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carsharing/rest/get-newest-record:
    get:
      tags:
      - Mobility V1 - Carsharing
      summary: Return the timestamp and value of the latest recorded data.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carsharing/rest/get-records:
    get:
      tags:
      - Mobility V1 - Carsharing
      summary: Returns all the data in the last given seconds.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carsharing/rest/get-records-in-timeframe:
    get:
      tags:
      - Mobility V1 - Carsharing
      summary: Return for a given station the data acquired in a given interval.
      description: Show all the data recorded in the given interval. Remember to convert
        any date into milliseconds from epoch.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1fromrequired"
      - $ref: "#/components/parameters/v1torequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carsharing/rest/access-token:
    get:
      tags:
      - Mobility V1 - Carsharing
      summary: Request a new access token
      description: This method would give you a new token to access protected data.
      parameters:
      - $ref: "#/components/parameters/v1authorizationrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carsharing/rest/refresh-token:
    get:
      tags:
      - Mobility V1 - Carsharing
      summary: Request a new authorisation token to access protected data.
      description: If you need to access protected, closed data and you have been
        given a username and password, invoke this method to receive a new token.
      parameters:
      - $ref: "#/components/parameters/v1userrequired"
      - $ref: "#/components/parameters/v1passwordrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}

  # V1 CARSHARING / CARS -------------------------------------------------------------------------
  /v1/carsharing/rest/cars/get-stations:
    get:
      tags:
      - Mobility V1 - Carsharing / Cars
      summary: Retrieve all stations in the dataset.
      description: This method returns all the ID of the stations listed in the dataset.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carsharing/rest/cars/get-station-details:
    get:
      tags:
      - Mobility V1 - Carsharing / Cars
      summary: Retrieve all information about all stations.
      description: This method returns the list of all stations in the dataset, including
        all available information about them.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carsharing/rest/cars/get-data-types:
    get:
      tags:
      - Mobility V1 - Carsharing / Cars
      summary: Return the available data types for that station.
      parameters:
      - $ref: "#/components/parameters/v1station"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carsharing/rest/cars/get-date-of-last-record:
    get:
      tags:
      - Mobility V1 - Carsharing / Cars
      summary: Return the timestamp of the latest recorded action for that station.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: date-time
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carsharing/rest/cars/get-newest-record:
    get:
      tags:
      - Mobility V1 - Carsharing / Cars
      summary: Return the timestamp and value of the latest recorded data.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carsharing/rest/cars/get-records:
    get:
      tags:
      - Mobility V1 - Carsharing / Cars
      summary: Returns all the data in the last given seconds.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carsharing/rest/cars/get-records-in-timeframe:
    get:
      tags:
      - Mobility V1 - Carsharing / Cars
      summary: Return for a given station the data acquired in a given interval.
      description: Show all the data recorded in the given interval. Remember to convert
        any date into milliseconds from epoch.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1fromrequired"
      - $ref: "#/components/parameters/v1torequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carsharing/rest/cars/access-token:
    get:
      tags:
      - Mobility V1 - Carsharing / Cars
      summary: Request a new access token
      description: This method would give you a new token to access protected data.
      parameters:
      - $ref: "#/components/parameters/v1authorizationrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/carsharing/rest/cars/refresh-token:
    get:
      tags:
      - Mobility V1 - Carsharing / Cars
      summary: Request a new authorisation token to access protected data.
      description: If you need to access protected, closed data and you have been
        given a username and password, invoke this method to receive a new token.
      parameters:
      - $ref: "#/components/parameters/v1userrequired"
      - $ref: "#/components/parameters/v1passwordrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}

  # V1 EMOBILITY ------------------------------------------------------------------------------
  /v1/emobility/rest/get-stations:
    get:
      tags:
      - Mobility V1 - Emobility
      summary: Retrieve all stations in the dataset.
      description: This method returns all the ID of the stations listed in the dataset.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/emobility/rest/get-station-details:
    get:
      tags:
      - Mobility V1 - Emobility
      summary: Retrieve all information about all stations.
      description: This method returns the list of all stations in the dataset, including
        all available information about them.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/emobility/rest/get-data-types:
    get:
      tags:
      - Mobility V1 - Emobility
      summary: Return the available data types for that station.
      parameters:
      - $ref: "#/components/parameters/v1station"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/emobility/rest/get-date-of-last-record:
    get:
      tags:
      - Mobility V1 - Emobility
      summary: Return the timestamp of the latest recorded action for that station.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: date-time
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/emobility/rest/get-newest-record:
    get:
      tags:
      - Mobility V1 - Emobility
      summary: Return the timestamp and value of the latest recorded data.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/emobility/rest/get-records:
    get:
      tags:
      - Mobility V1 - Emobility
      summary: Returns all the data in the last given seconds.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/emobility/rest/get-records-in-timeframe:
    get:
      tags:
      - Mobility V1 - Emobility
      summary: Return for a given station the data acquired in a given interval.
      description: Show all the data recorded in the given interval. Remember to convert
        any date into milliseconds from epoch.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1fromrequired"
      - $ref: "#/components/parameters/v1torequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/emobility/rest/access-token:
    get:
      tags:
      - Mobility V1 - Emobility
      summary: Request a new access token
      description: This method would give you a new token to access protected data.
      parameters:
      - $ref: "#/components/parameters/v1authorizationrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/emobility/rest/refresh-token:
    get:
      tags:
      - Mobility V1 - Emobility
      summary: Request a new authorisation token to access protected data.
      description: If you need to access protected, closed data and you have been
        given a username and password, invoke this method to receive a new token.
      parameters:
      - $ref: "#/components/parameters/v1userrequired"
      - $ref: "#/components/parameters/v1passwordrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}

  # V1 EMOBILITY - PLUGS ----------------------------------------------------------------------
  /v1/emobility/rest/plugs/get-stations:
    get:
      tags:
      - Mobility V1 - Emobility / Plugs
      summary: Retrieve all stations in the dataset.
      description: This method returns all the ID of the stations listed in the dataset.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/emobility/rest/plugs/get-station-details:
    get:
      tags:
      - Mobility V1 - Emobility / Plugs
      summary: Retrieve all information about all stations.
      description: This method returns the list of all stations in the dataset, including
        all available information about them.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/emobility/rest/plugs/get-data-types:
    get:
      tags:
      - Mobility V1 - Emobility / Plugs
      summary: Return the available data types for that station.
      parameters:
      - $ref: "#/components/parameters/v1station"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/emobility/rest/plugs/get-date-of-last-record:
    get:
      tags:
      - Mobility V1 - Emobility / Plugs
      summary: Return the timestamp of the latest recorded action for that station.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: date-time
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/emobility/rest/plugs/get-newest-record:
    get:
      tags:
      - Mobility V1 - Emobility / Plugs
      summary: Return the timestamp and value of the latest recorded data.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/emobility/rest/plugs/get-records:
    get:
      tags:
      - Mobility V1 - Emobility / Plugs
      summary: Returns all the data in the last given seconds.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/emobility/rest/plugs/get-records-in-timeframe:
    get:
      tags:
      - Mobility V1 - Emobility / Plugs
      summary: Return for a given station the data acquired in a given interval.
      description: Show all the data recorded in the given interval. Remember to convert
        any date into milliseconds from epoch.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1fromrequired"
      - $ref: "#/components/parameters/v1torequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/emobility/rest/plugs/access-token:
    get:
      tags:
      - Mobility V1 - Emobility / Plugs
      summary: Request a new access token
      description: This method would give you a new token to access protected data.
      parameters:
      - $ref: "#/components/parameters/v1authorizationrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/emobility/rest/plugs/refresh-token:
    get:
      tags:
      - Mobility V1 - Emobility / Plugs
      summary: Request a new authorisation token to access protected data.
      description: If you need to access protected, closed data and you have been
        given a username and password, invoke this method to receive a new token.
      parameters:
      - $ref: "#/components/parameters/v1userrequired"
      - $ref: "#/components/parameters/v1passwordrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}

  # V1 ENVIRONMENT -----------------------------------------------------------------------------
  /v1/environment/rest/get-stations:
    get:
      tags:
      - Mobility V1 - Environment
      summary: Retrieve all stations in the dataset.
      description: This method returns all the ID of the stations listed in the dataset.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/environment/rest/get-station-details:
    get:
      tags:
      - Mobility V1 - Environment
      summary: Retrieve all information about all stations.
      description: This method returns the list of all stations in the dataset, including
        all available information about them.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/environment/rest/get-data-types:
    get:
      tags:
      - Mobility V1 - Environment
      summary: Return the available data types for that station.
      parameters:
      - $ref: "#/components/parameters/v1station"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/environment/rest/get-date-of-last-record:
    get:
      tags:
      - Mobility V1 - Environment
      summary: Return the timestamp of the latest recorded action for that station.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: date-time
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/environment/rest/get-newest-record:
    get:
      tags:
      - Mobility V1 - Environment
      summary: Return the timestamp and value of the latest recorded data.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/environment/rest/get-records:
    get:
      tags:
      - Mobility V1 - Environment
      summary: Returns all the data in the last given seconds.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/environment/rest/get-records-in-timeframe:
    get:
      tags:
      - Mobility V1 - Environment
      summary: Return for a given station the data acquired in a given interval.
      description: Show all the data recorded in the given interval. Remember to convert
        any date into milliseconds from epoch.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1fromrequired"
      - $ref: "#/components/parameters/v1torequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/environment/rest/access-token:
    get:
      tags:
      - Mobility V1 - Environment
      summary: Request a new access token
      description: This method would give you a new token to access protected data.
      parameters:
      - $ref: "#/components/parameters/v1authorizationrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/environment/rest/refresh-token:
    get:
      tags:
      - Mobility V1 - Environment
      summary: Request a new authorisation token to access protected data.
      description: If you need to access protected, closed data and you have been
        given a username and password, invoke this method to receive a new token.
      parameters:
      - $ref: "#/components/parameters/v1userrequired"
      - $ref: "#/components/parameters/v1passwordrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}

  # V1 METEOROLOGY -----------------------------------------------------------------------------
  /v1/meteorology/rest/get-stations:
    get:
      tags:
      - Mobility V1 - Meteorology
      summary: Retrieve all stations in the dataset.
      description: This method returns all the ID of the stations listed in the dataset.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/meteorology/rest/get-station-details:
    get:
      tags:
      - Mobility V1 - Meteorology
      summary: Retrieve all information about all stations.
      description: This method returns the list of all stations in the dataset, including
        all available information about them.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/meteorology/rest/get-data-types:
    get:
      tags:
      - Mobility V1 - Meteorology
      summary: Return the available data types for that station.
      parameters:
      - $ref: "#/components/parameters/v1station"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/meteorology/rest/get-date-of-last-record:
    get:
      tags:
      - Mobility V1 - Meteorology
      summary: Return the timestamp of the latest recorded action for that station.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: date-time
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/meteorology/rest/get-newest-record:
    get:
      tags:
      - Mobility V1 - Meteorology
      summary: Return the timestamp and value of the latest recorded data.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/meteorology/rest/get-records:
    get:
      tags:
      - Mobility V1 - Meteorology
      summary: Returns all the data in the last given seconds.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/meteorology/rest/get-records-in-timeframe:
    get:
      tags:
      - Mobility V1 - Meteorology
      summary: Return for a given station the data acquired in a given interval.
      description: Show all the data recorded in the given interval. Remember to convert
        any date into milliseconds from epoch.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1fromrequired"
      - $ref: "#/components/parameters/v1torequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/meteorology/rest/access-token:
    get:
      tags:
      - Mobility V1 - Meteorology
      summary: Request a new access token
      description: This method would give you a new token to access protected data.
      parameters:
      - $ref: "#/components/parameters/v1authorizationrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/meteorology/rest/refresh-token:
    get:
      tags:
      - Mobility V1 - Meteorology
      summary: Request a new authorisation token to access protected data.
      description: If you need to access protected, closed data and you have been
        given a username and password, invoke this method to receive a new token.
      parameters:
      - $ref: "#/components/parameters/v1userrequired"
      - $ref: "#/components/parameters/v1passwordrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}

  # V1 ORIGIN-DESTINATION ----------------------------------------------------------------------
  /v1/origin-destination/rest/get-stations:
    get:
      tags:
      - Mobility V1 - Origin/Destination
      summary: Retrieve all stations in the dataset.
      description: This method returns all the ID of the stations listed in the dataset.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/origin-destination/rest/get-station-details:
    get:
      tags:
      - Mobility V1 - Origin/Destination
      summary: Retrieve all information about all stations.
      description: This method returns the list of all stations in the dataset, including
        all available information about them.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/origin-destination/rest/get-data-types:
    get:
      tags:
      - Mobility V1 - Origin/Destination
      summary: Return the available data types for that station.
      parameters:
      - $ref: "#/components/parameters/v1station"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/origin-destination/rest/get-date-of-last-record:
    get:
      tags:
      - Mobility V1 - Origin/Destination
      summary: Return the timestamp of the latest recorded action for that station.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: date-time
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/origin-destination/rest/get-newest-record:
    get:
      tags:
      - Mobility V1 - Origin/Destination
      summary: Return the timestamp and value of the latest recorded data.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/origin-destination/rest/get-records:
    get:
      tags:
      - Mobility V1 - Origin/Destination
      summary: Returns all the data in the last given seconds.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/origin-destination/rest/get-records-in-timeframe:
    get:
      tags:
      - Mobility V1 - Origin/Destination
      summary: Return for a given station the data acquired in a given interval.
      description: Show all the data recorded in the given interval. Remember to convert
        any date into milliseconds from epoch.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1fromrequired"
      - $ref: "#/components/parameters/v1torequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/origin-destination/rest/access-token:
    get:
      tags:
      - Mobility V1 - Origin/Destination
      summary: Request a new access token
      description: This method would give you a new token to access protected data.
      parameters:
      - $ref: "#/components/parameters/v1authorizationrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/origin-destination/rest/refresh-token:
    get:
      tags:
      - Mobility V1 - Origin/Destination
      summary: Request a new authorisation token to access protected data.
      description: If you need to access protected, closed data and you have been
        given a username and password, invoke this method to receive a new token.
      parameters:
      - $ref: "#/components/parameters/v1userrequired"
      - $ref: "#/components/parameters/v1passwordrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}

  # V1 ROADWEATHER -----------------------------------------------------------------------------
  /v1/roadweather/rest/get-stations:
    get:
      tags:
      - Mobility V1 - Roadweather
      summary: Retrieve all stations in the dataset.
      description: This method returns all the ID of the stations listed in the dataset.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/roadweather/rest/get-station-details:
    get:
      tags:
      - Mobility V1 - Roadweather
      summary: Retrieve all information about all stations.
      description: This method returns the list of all stations in the dataset, including
        all available information about them.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/roadweather/rest/get-data-types:
    get:
      tags:
      - Mobility V1 - Roadweather
      summary: Return the available data types for that station.
      parameters:
      - $ref: "#/components/parameters/v1station"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/roadweather/rest/get-date-of-last-record:
    get:
      tags:
      - Mobility V1 - Roadweather
      summary: Return the timestamp of the latest recorded action for that station.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: date-time
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/roadweather/rest/get-newest-record:
    get:
      tags:
      - Mobility V1 - Roadweather
      summary: Return the timestamp and value of the latest recorded data.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/roadweather/rest/get-records:
    get:
      tags:
      - Mobility V1 - Roadweather
      summary: Returns all the data in the last given seconds.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/roadweather/rest/get-records-in-timeframe:
    get:
      tags:
      - Mobility V1 - Roadweather
      summary: Return for a given station the data acquired in a given interval.
      description: Show all the data recorded in the given interval. Remember to convert
        any date into milliseconds from epoch.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1fromrequired"
      - $ref: "#/components/parameters/v1torequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/roadweather/rest/access-token:
    get:
      tags:
      - Mobility V1 - Roadweather
      summary: Request a new access token
      description: This method would give you a new token to access protected data.
      parameters:
      - $ref: "#/components/parameters/v1authorizationrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/roadweather/rest/refresh-token:
    get:
      tags:
      - Mobility V1 - Roadweather
      summary: Request a new authorisation token to access protected data.
      description: If you need to access protected, closed data and you have been
        given a username and password, invoke this method to receive a new token.
      parameters:
      - $ref: "#/components/parameters/v1userrequired"
      - $ref: "#/components/parameters/v1passwordrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}

  # V1 SENSORS ---------------------------------------------------------------------------------
  /v1/sensors/rest/get-stations:
    get:
      tags:
      - Mobility V1 - Sensors
      summary: Retrieve all stations in the dataset.
      description: This method returns all the ID of the stations listed in the dataset.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/sensors/rest/get-station-details:
    get:
      tags:
      - Mobility V1 - Sensors
      summary: Retrieve all information about all stations.
      description: This method returns the list of all stations in the dataset, including
        all available information about them.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/sensors/rest/get-data-types:
    get:
      tags:
      - Mobility V1 - Sensors
      summary: Return the available data types for that station.
      parameters:
      - $ref: "#/components/parameters/v1station"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/sensors/rest/get-date-of-last-record:
    get:
      tags:
      - Mobility V1 - Sensors
      summary: Return the timestamp of the latest recorded action for that station.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: date-time
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/sensors/rest/get-newest-record:
    get:
      tags:
      - Mobility V1 - Sensors
      summary: Return the timestamp and value of the latest recorded data.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/sensors/rest/get-records:
    get:
      tags:
      - Mobility V1 - Sensors
      summary: Returns all the data in the last given seconds.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/sensors/rest/get-records-in-timeframe:
    get:
      tags:
      - Mobility V1 - Sensors
      summary: Return for a given station the data acquired in a given interval.
      description: Show all the data recorded in the given interval. Remember to convert
        any date into milliseconds from epoch.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1fromrequired"
      - $ref: "#/components/parameters/v1torequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/sensors/rest/access-token:
    get:
      tags:
      - Mobility V1 - Sensors
      summary: Request a new access token
      description: This method would give you a new token to access protected data.
      parameters:
      - $ref: "#/components/parameters/v1authorizationrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/sensors/rest/refresh-token:
    get:
      tags:
      - Mobility V1 - Sensors
      summary: Request a new authorisation token to access protected data.
      description: If you need to access protected, closed data and you have been
        given a username and password, invoke this method to receive a new token.
      parameters:
      - $ref: "#/components/parameters/v1userrequired"
      - $ref: "#/components/parameters/v1passwordrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}

  # V1 STREET ----------------------------------------------------------------------------------
  /v1/street/rest/get-stations:
    get:
      tags:
      - Mobility V1 - Street
      summary: Retrieve all stations in the dataset.
      description: This method returns all the ID of the stations listed in the dataset.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/street/rest/get-station-details:
    get:
      tags:
      - Mobility V1 - Street
      summary: Retrieve all information about all stations.
      description: This method returns the list of all stations in the dataset, including
        all available information about them.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/street/rest/get-data-types:
    get:
      tags:
      - Mobility V1 - Street
      summary: Return the available data types for that station.
      parameters:
      - $ref: "#/components/parameters/v1station"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/street/rest/get-date-of-last-record:
    get:
      tags:
      - Mobility V1 - Street
      summary: Return the timestamp of the latest recorded action for that station.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: date-time
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/street/rest/get-newest-record:
    get:
      tags:
      - Mobility V1 - Street
      summary: Return the timestamp and value of the latest recorded data.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/street/rest/get-records:
    get:
      tags:
      - Mobility V1 - Street
      summary: Returns all the data in the last given seconds.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/street/rest/get-records-in-timeframe:
    get:
      tags:
      - Mobility V1 - Street
      summary: Return for a given station the data acquired in a given interval.
      description: Show all the data recorded in the given interval. Remember to convert
        any date into milliseconds from epoch.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1fromrequired"
      - $ref: "#/components/parameters/v1torequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/street/rest/access-token:
    get:
      tags:
      - Mobility V1 - Street
      summary: Request a new access token
      description: This method would give you a new token to access protected data.
      parameters:
      - $ref: "#/components/parameters/v1authorizationrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/street/rest/refresh-token:
    get:
      tags:
      - Mobility V1 - Street
      summary: Request a new authorisation token to access protected data.
      description: If you need to access protected, closed data and you have been
        given a username and password, invoke this method to receive a new token.
      parameters:
      - $ref: "#/components/parameters/v1userrequired"
      - $ref: "#/components/parameters/v1passwordrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}

  # V1 VMS -------------------------------------------------------------------------------------
  /v1/vms/rest/get-stations:
    get:
      tags:
      - Mobility V1 - VMS
      summary: Retrieve all stations in the dataset.
      description: This method returns all the ID of the stations listed in the dataset.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/vms/rest/get-station-details:
    get:
      tags:
      - Mobility V1 - VMS
      summary: Retrieve all information about all stations.
      description: This method returns the list of all stations in the dataset, including
        all available information about them.
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StationDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/vms/rest/get-data-types:
    get:
      tags:
      - Mobility V1 - VMS
      summary: Return the available data types for that station.
      parameters:
      - $ref: "#/components/parameters/v1station"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/vms/rest/get-date-of-last-record:
    get:
      tags:
      - Mobility V1 - VMS
      summary: Return the timestamp of the latest recorded action for that station.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: date-time
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/vms/rest/get-newest-record:
    get:
      tags:
      - Mobility V1 - VMS
      summary: Return the timestamp and value of the latest recorded data.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1type"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/vms/rest/get-records:
    get:
      tags:
      - Mobility V1 - VMS
      summary: Returns all the data in the last given seconds.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/vms/rest/get-records-in-timeframe:
    get:
      tags:
      - Mobility V1 - VMS
      summary: Return for a given station the data acquired in a given interval.
      description: Show all the data recorded in the given interval. Remember to convert
        any date into milliseconds from epoch.
      parameters:
      - $ref: "#/components/parameters/v1authorization"
      - $ref: "#/components/parameters/v1stationrequired"
      - $ref: "#/components/parameters/v1typenamerequired"
      - $ref: "#/components/parameters/v1secondsrequired"
      - $ref: "#/components/parameters/v1fromrequired"
      - $ref: "#/components/parameters/v1torequired"
      - $ref: "#/components/parameters/v1period"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SlimRecordDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/vms/rest/access-token:
    get:
      tags:
      - Mobility V1 - VMS
      summary: Request a new access token
      description: This method would give you a new token to access protected data.
      parameters:
      - $ref: "#/components/parameters/v1authorizationrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccessTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /v1/vms/rest/refresh-token:
    get:
      tags:
      - Mobility V1 - VMS
      summary: Request a new authorisation token to access protected data.
      description: If you need to access protected, closed data and you have been
        given a username and password, invoke this method to receive a new token.
      parameters:
      - $ref: "#/components/parameters/v1userrequired"
      - $ref: "#/components/parameters/v1passwordrequired"
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/JwtTokenDto'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}

components:
  schemas:
    AccessTokenDto:
      title: AccessTokenDto
      type: object
      properties:
        expireDate:
          type: integer
          description: The limit of validity of the token.
          format: int64
        token:
          type: string
          description: The token to be used in API calls needing authentication.
    JwtTokenDto:
      title: JwtTokenDto
      type: object
      properties:
        accessToken:
          $ref: '#/components/schemas/AccessTokenDto'
        refreshToken:
          type: string
    SlimRecordDto:
      title: SlimRecordDto
      type: object
      properties:
        created_on:
          type: integer
          format: int64
        period:
          type: integer
          format: int32
        timestamp:
          type: integer
          format: int64
        value:
          type: object
          properties: {}
    StationDto:
      title: StationDto
      type: object
      properties:
        coordinateReferenceSystem:
          type: string
        elevation:
          type: number
          format: double
        id:
          type: string
          description: The unique ID associated to the station.
        latitude:
          type: number
          description: The latitude where this station is located.
          format: double
        longitude:
          type: number
          description: The longitude where this station is located.
          format: double
        name:
          type: string
          description: The name of the station
        origin:
          type: string
        parentStation:
          type: string
        stationType:
          type: string
          description: The type of station
  parameters:
    # V2 PARAMETERS -----------------------------------------------------------------------------
    representation:
      name: representation
      in: path
      description:
        Do you want to have the result in a <code>tree</code> or <code>flat</code>
        representation.
      required: true
      schema:
        type: string
        default: flat
    stationTypes:
      name: stationTypes
      in: path
      description:
        Station types or categories. Multiple types possible as comma-separated-values.
        All types with <code>*</code>.
      required: true
      schema:
        type: string
        default: "*"
    dataTypes:
      name: dataTypes
      in: path
      description:
        Data types. Multiple types possible as comma-separated-values.
        All types with <code>*</code>.
      required: true
      schema:
        type: string
        default: "*"
    from:
      name: from
      in: path
      description:
        Date or date-time format, that forms a half-open interval [from,
        to). The format is <code>yyyy-MM-dd[T[HH][:mm][:ss][.SSS]][Z]</code>, where
        [] denotes optionality. Z is the timezone, for instance, +0200.
      required: true
      schema:
        type: string
    to:
      name: to
      in: path
      description:
        Date or date-time format, that forms a half-open interval [from,
        to). The format is <code>yyyy-MM-dd[T[HH][:mm][:ss][.SSS]][Z]</code>, where
        [] denotes optionality. Z is the timezone, for instance, +0200.
      required: true
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: The limit of the response. Set it to -1 to disable it.
      schema:
        type: integer
        format: int64
        default: 200
    offset:
      name: offset
      in: query
      description:
        The offset of the response list. To simulate pagination, together
        with limit.
      schema:
        type: integer
        format: int64
        default: 0
    select:
      name: select
      in: query
      description: >
        Select <code>aliases</code>, which will be used to build the
        response. Multiple aliases possible as comma-separated-values. Example:
        <code>sname</code> or <code>smetadata.city.cap</code> for JSON. Functions
        can be set as <code>func(alias)</code> (Functions with JSON are not supported
        yet)
      schema:
        type: string
    where:
      name: where
      in: query
      description: |-
        Filter the result with filter-triples, like <code>alias.operator.value_or_list</code>

        <code>values_or_list</code>
         -   value: Whatever you want, also a regular expression. However, you need to escape <code>,'"</code> with a <code>\\</code>. Use url-encoded values, if your tool does not support certain characters.
         -   list: <code>(value,value,value)</code>

        <code>operator</code>
         -   eq: Equal
         -   neq: Not Equal
         -   lt: Less Than
         -   gt: Greater Than
         -   lteq: Less Than Or Equal
         -   gteq: Greater Than Or Equal
         -   re: Regular Expression
         -   ire: Insensitive Regular Expression
         -   nre: Negated Regular Expression
         -   nire: Negated Insensitive Regular Expression
         -   bbi: Bounding box intersecting objects (ex., a street that is only partially covered by the box). Syntax? See below.
         -   bbc: Bounding box containing objects (ex., a station or street, that is completely covered by the box). Syntax? See below.
         -   in: True, if the value of the alias can be found within the given list. Example: name.in.(Peter,Patrick,Rudi)
         -   nin: False, if the value of the alias can be found within the given list. Example: name.nin.(Peter,Patrick,Rudi)


        <code>logical operations</code>
         -   and(alias.operator.value_or_list,...): Conjunction of filters (can be nested)
         -   or(alias.operator.value_or_list,...): Disjunction of filters (can be nested)

        Multiple conditions possible as comma-separated-values. <code>value</code>s will be casted to Double precision or <code>null</code>, if possible. Put them inside double quotes, if you want to prevent that.

        Example-syntax for bbi/bbc could be <code>coordinate.bbi.(11,46,12,47,4326)</code>, where the ordering inside the list is left-x, left-y, right-x, right-y and SRID (optional).
      schema:
        type: string
    shownull:
      name: shownull
      in: query
      description:
        Should JSON keys with null-values be returned, or removed from
        the response-JSON.
      schema:
        type: boolean
        default: false
    distinct:
      name: distinct
      in: query
      description: Remove duplicate entries.
      schema:
        type: boolean
        default: true

    # V1 PARAMETERS -----------------------------------------------------------------------------
    v1station:
      name: station
      in: query
      description: The unique ID of the station.
      schema:
        type: string
    v1stationrequired:
      name: station
      in: query
      description: The unique ID of the station.
      schema:
        type: string
      required: true
    v1authorization:
      name: Authorization
      in: header
      description: All access token need to start with prefix 'Bearer'
        (see https://tools.ietf.org/html/rfc6750#section-2.1).
      schema:
        type: string
    v1authorizationrequired:
      name: Authorization
      in: header
      description: All access token need to start with prefix 'Bearer'
        (see https://tools.ietf.org/html/rfc6750#section-2.1).
      schema:
        type: string
      required: true
    v1type:
      name: type
      in: query
      description: The name of the data-type you are searching for.
      schema:
        type: string
    v1typenamerequired:
      name: name
      in: query
      description: The name of the data-type you are searching for.
      schema:
        type: string
      required: true
    v1period:
      name: period
      in: query
      description: The interval in time between two successive data acquisitions.
      schema:
        type: integer
        format: int32
    v1secondsrequired:
      name: seconds
      in: query
      description: How many seconds in the past (from now) the search must be started.
      schema:
        type: integer
        format: int32
      required: true
    v1fromrequired:
      name: from
      in: query
      description: The timestamp in milliseconds of the start of the interval.
      schema:
        type: integer
        format: int64
      required: true
    v1torequired:
      name: to
      in: query
      description: The timestamp in milliseconds of the end of the interval.
      schema:
        type: integer
        format: int64
      required: true
    v1userrequired:
      name: user
      in: query
      description: The username of the user to which to grant the new token.
      schema:
        type: string
      required: true
    v1passwordrequired:
      name: pw
      in: query
      description: The password corresponding to the user.
      schema:
        type: string
      required: true
